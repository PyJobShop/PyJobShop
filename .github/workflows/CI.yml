name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Test pyjobshop using Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip and poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Cache Python dependencies
        uses: actions/cache@v3
        id: cache-python
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}
      - name: Install Python dependencies
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: poetry install --all-extras
      - name: Cache pre-commit
        uses: actions/cache@v3
        id: cache-pre-commit
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-${{ env.pythonLocation }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install pre-commit
        if: steps.cache-pre-commit.outputs.cache-hit != 'true'
        run: poetry run pre-commit install --install-hooks
      - name: Run pre-commit
        run: poetry run pre-commit run --all-files
      - name: Run tests
        run: poetry run pytest --solvers ortools cpoptimizer
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
